You are given N activities with their start time Start[] and finish time Finish[]. You need to tell the maximum number of activities a single person can perform.
Note:
A person can only work on a single activity at a time. The start time of one activity can coincide with the end time of another.


2
4
1 6 2 4 
2 7 5 8 
3
1 1 1
4 5 9
Sample Output 1:
3
1

#include <bits/stdc++.h>

static bool comp(pair<int,int>a,pair<int,int>b)
{
    return (a.second<b.second);
}

int maximumActivities(vector<int> &start, vector<int> &finish) {

    vector<pair<int,int>>v;
    for(int i=0;i<start.size();i++)
    {
        v.push_back({start[i],finish[i]});
    }

    sort(v.begin(),v.end(),comp);
    int count=1;

    int limit=v[0].second;
    for(int i=1;i<v.size();i++)
    {
        if(v[i].first>=limit)
        {
            count++;
            limit=v[i].second;
        }
    }
    return count;
}
